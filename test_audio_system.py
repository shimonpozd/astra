#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–π
"""
import asyncio
import httpx
import json

async def test_audio_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    print("üéµ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ TTS —Å—Ç—Ä–∏–º–∏–Ω–≥–∞
    print("\n1. –¢–µ—Å—Ç–∏—Ä—É–µ–º TTS —Å—Ç—Ä–∏–º–∏–Ω–≥...")
    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(
                "http://localhost:7010/stream",
                json={
                    "text": "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Ç–µ—Å—Ç TTS —Å—Ç—Ä–∏–º–∏–Ω–≥–∞!",
                    "language": "ru"
                },
                timeout=30.0
            )
            print(f"‚úÖ TTS —Å—Ç—Ä–∏–º–∏–Ω–≥: {response.status_code}")
            if response.status_code == 200:
                print(f"   –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.content)} –±–∞–π—Ç")
            else:
                print(f"   –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå TTS —Å—Ç—Ä–∏–º–∏–Ω–≥: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É–¥–∏–æ API
    print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É–¥–∏–æ API...")
    try:
        async with httpx.AsyncClient() as client:
            response = await client.post(
                "http://localhost:8000/api/audio/synthesize",
                json={
                    "text": "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Ç–µ—Å—Ç –∞—É–¥–∏–æ —Å–æ–æ–±—â–µ–Ω–∏—è!",
                    "chat_id": "test-chat-123",
                    "voice_id": "yandex-oksana",
                    "language": "ru",
                    "speed": 1.0,
                    "provider": "yandex"
                },
                timeout=30.0
            )
            print(f"‚úÖ –ê—É–¥–∏–æ API: {response.status_code}")
            if response.status_code == 200:
                result = response.json()
                print(f"   ID: {result.get('id')}")
                print(f"   URL: {result.get('audio_url')}")
            else:
                print(f"   –û—à–∏–±–∫–∞: {response.text}")
    except Exception as e:
        print(f"‚ùå –ê—É–¥–∏–æ API: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ
    print("\n3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∞—É–¥–∏–æ...")
    try:
        async with httpx.AsyncClient() as client:
            # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–µ–º –∞—É–¥–∏–æ
            response = await client.post(
                "http://localhost:8000/api/audio/synthesize",
                json={
                    "text": "–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ",
                    "chat_id": "test-chat-456",
                    "provider": "yandex"
                }
            )
            
            if response.status_code == 200:
                result = response.json()
                audio_url = result.get('audio_url')
                
                # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—É–¥–∏–æ —Ñ–∞–π–ª
                if audio_url:
                    audio_response = await client.get(f"http://localhost:8000{audio_url}")
                    print(f"‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ: {audio_response.status_code}")
                    if audio_response.status_code == 200:
                        print(f"   –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {len(audio_response.content)} –±–∞–π—Ç")
                    else:
                        print(f"   –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {audio_response.text}")
            else:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∞—É–¥–∏–æ: {response.text}")
    except Exception as e:
        print(f"‚ùå –ó–∞–≥—Ä—É–∑–∫–∞ –∞—É–¥–∏–æ: {e}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_audio_system())


